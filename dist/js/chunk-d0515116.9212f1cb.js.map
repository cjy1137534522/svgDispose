{"version":3,"sources":["webpack:///./src/views/page_2.vue?8721","webpack:///src/views/page_2.vue","webpack:///./src/views/page_2.vue?87ad","webpack:///./src/views/page_2.vue","webpack:///./src/assets/3.png"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","ref","staticStyle","_v","staticRenderFns","component","module","exports"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,WAAW,CAACF,EAAG,MAAM,CAACG,IAAI,QAAQC,YAAY,CAAC,QAAU,QAAQF,MAAM,CAAC,IAAM,EAAQ,WAAsBF,EAAG,SAAS,CAACG,IAAI,WAAWC,YAAY,CAAC,OAAS,qBAAqBF,MAAM,CAAC,MAAQ,MAAM,OAAS,QAAQ,CAACN,EAAIS,GAAG,0CACnVC,EAAkB,GCMtB,sBACA,mBACA,GACE,WAAF,GACE,KAFF,WAGI,MAAJ,IAEE,QALF,WAMI,EAAJ,MAEE,QARF,WASI,KAAJ,QAEE,cAXF,WAYI,EAAJ,MAEE,QAAF,CACI,KADJ,WAGM,EAAN,qCACM,EAAN,eACM,EAAN,gBACM,QAAN,uBACM,QAAN,OAEM,EAAN,cAIM,IAAN,mBACM,EAAN,kBACQ,EAAR,qBACQ,EAAR,0BAKI,YArBJ,WAsBM,KAAN,qDACQ,IAAR,wBACQ,QAAR,OACQ,QAAR,sCACQ,QAAR,WAGI,iBA7BJ,SA6BA,GACM,IAAN,IAQM,OAPN,uBACQ,EAAR,SACQ,EAAR,WACA,2BACQ,EAAR,UACQ,EAAR,WAEA,CAAQ,EAAR,EAAQ,EAAR,IAGI,gBAzCJ,WA0CM,IAAN,0BAEM,QAAN,YACM,IAAN,6BACQ,EAAR,sBACQ,EAAR,0BACQ,EAAR,0BACQ,EAAR,cAEM,EAAN,qBAGI,WAtDJ,WA4DM,IALA,IAAN,IACA,IACA,IACA,OACA,OACA,YACQ,IAAR,gBACU,EAAV,gBACU,EAAV,EACU,EAAV,IACU,EAAV,IACU,EAAV,8CACA,QACY,EAAZ,YACY,EAAZ,YACY,EAAZ,cAEY,EAAZ,UACY,EAAZ,UACY,EAAZ,WAIM,EAAN,oBACM,KAAN,aAGI,UAlFJ,WAmFM,EAAN,wBASM,IARA,IAAN,IACA,OACA,OACA,OACA,OACA,OACA,OAEA,YACQ,IAAR,gBACU,EAAV,gBACU,EAAV,EACU,EAAV,UACU,EAAV,6BACU,EAAV,YACU,EAAV,iCACU,EAAV,cACA,yBACY,EAAZ,YACY,EAAZ,SAIM,EAAN,qBAGI,SA9GJ,SA8GA,OACM,EAAN,OACM,EAAN,kBAEM,EAAN,6CACM,EAAN,aACM,EAAN,cACM,IAAN,8BACQ,EAAR,YACQ,EAAR,YACQ,EAAR,0BACQ,EAAR,YACQ,EAAR,SAEM,IAAN,+BACQ,EAAR,YACQ,EAAR,YACQ,EAAR,yBACQ,EAAR,YACQ,EAAR,SAEM,EAAN,aC1JgV,I,YCO5UC,EAAY,eACd,EACAZ,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,8BClBfC,EAAOC,QAAU,IAA0B","file":"js/chunk-d0515116.9212f1cb.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"page_1\"}},[_c('img',{ref:\"myImg\",staticStyle:{\"display\":\"none\"},attrs:{\"src\":require(\"../assets/3.png\")}}),_c('canvas',{ref:\"myCanvas\",staticStyle:{\"border\":\"1px solid #c3c3c3\"},attrs:{\"width\":\"500\",\"height\":\"400\"}},[_vm._v(\"抱歉！！！你当前使用的流览器不支持canvas！！！请换一个！！！\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\r\n  #page_1\r\n    img(ref=\"myImg\" src=\"../assets/3.png\" style=\"display:none;\")\r\n    canvas(ref=\"myCanvas\" width=\"500\" height=\"400\" style=\"border:1px solid #c3c3c3;\") 抱歉！！！你当前使用的流览器不支持canvas！！！请换一个！！！\r\n</template>\r\n\r\n<script>\r\nlet _this = null, ctx = null, WIDTH = 0, HEIGHT = 0,\r\n    pixel = null, opixel = null, edge = [];// xpixel = null,\r\nexport default {\r\n    components: {},\r\n    data() {\r\n        return {};\r\n    },\r\n    created() {\r\n        _this = this;\r\n    },\r\n    mounted() {\r\n        this.init();\r\n    },\r\n    beforeDestroy() {\r\n        ctx = null;\r\n    },\r\n    methods: {\r\n        init() {\r\n\r\n            ctx = this.$refs.myCanvas.getContext(\"2d\");\r\n            WIDTH = ctx.canvas.width;\r\n            HEIGHT = ctx.canvas.height;\r\n            console.log(\"ctx............\");\r\n            console.log(ctx);\r\n\r\n            _this.clickAction()\r\n\r\n            //画网格\r\n            // this.drawGrid(\"#ccc\", 50, 50);\r\n            let img = this.$refs.myImg;\r\n            img.onload = function () {\r\n                ctx.drawImage(img, 0, 0, WIDTH, HEIGHT);\r\n                pixel = (ctx.getImageData(0, 0, WIDTH, HEIGHT));\r\n                // _this.whiteBlack();\r\n            };\r\n        },\r\n        //绑定点击事件\r\n        clickAction() {\r\n            this.$refs.myCanvas.addEventListener(\"click\", (e) => {\r\n                let pos = _this.getEventPosition(e)\r\n                console.log(opixel)\r\n                console.log((ctx.getImageData(pos.x, pos.y, 1, 1)).data);\r\n                console.log(pos)\r\n            })\r\n        },\r\n        getEventPosition(ev) {\r\n            let x, y;\r\n            if (ev.layerX || ev.layerX == 0) {\r\n                x = ev.layerX;\r\n                y = ev.layerY;\r\n            } else if (ev.offsetX || ev.offsetX == 0) { // Opera\r\n                x = ev.offsetX;\r\n                y = ev.offsetY;\r\n            }\r\n            return { x: x, y: y };\r\n        },\r\n        //获取固定的区域图像数据\r\n        getCtxImageData() {\r\n            let imgData = ctx.getImageData(0, 0, WIDTH, HEIGHT);\r\n            // ctx.putImageData(imgData, 300, 250);\r\n            console.log(imgData.data);\r\n            for (let i = 0; i < imgData.data.length; i += 4) {\r\n                imgData.data[i] = 255 - imgData.data[i];//红色\r\n                imgData.data[i + 1] = 255 - imgData.data[i + 1];//绿色 \r\n                imgData.data[i + 2] = 255 - imgData.data[i + 2];//蓝色 \r\n                imgData.data[i + 3] = 155;//alpha 通道 (0-255; 0 是透明的，255 是完全可见的)\r\n            }\r\n            ctx.putImageData(imgData, 0, 0);\r\n        },\r\n        //黑白化\r\n        whiteBlack() {\r\n            let red = 0;\r\n            let green = 0;\r\n            let blue = 0;\r\n            let index = null;\r\n            let average = null;\r\n            for (let i = 0; i < HEIGHT; i++) {\r\n                for (let j = 0; j < WIDTH; j++) {\r\n                    index = (pixel.width * i + j) * 4;\r\n                    red = index;\r\n                    green = index + 1;\r\n                    blue = index + 2;\r\n                    average = Math.round((pixel.data[red] + pixel.data[green] + pixel.data[blue]) / 3);\r\n                    if (average >= 254) {\r\n                        pixel.data[red] = 255;\r\n                        pixel.data[green] = 255;\r\n                        pixel.data[blue] = 255;\r\n                    } else {\r\n                        pixel.data[red] = 0;\r\n                        pixel.data[green] = 0;\r\n                        pixel.data[blue] = 0;\r\n                    }\r\n                }\r\n            }\r\n            ctx.putImageData(pixel, 0, 0);\r\n            this.imageEdge()\r\n        },\r\n        //边缘化\r\n        imageEdge() {\r\n            opixel = ctx.getImageData(0, 0, WIDTH, HEIGHT);\r\n            let red = 0;\r\n            let index = null;\r\n            let redVal = null;\r\n            let prevRedVal = null;\r\n            let nextRedVal = null;\r\n            let topRedVal = null;\r\n            let bottomRedVal = null;\r\n\r\n            for (let i = 0; i < HEIGHT; i++) {\r\n                for (let j = 0; j < WIDTH; j++) {\r\n                    index = (pixel.width * i + j) * 4;\r\n                    red = index;\r\n                    redVal = pixel.data[red];\r\n                    prevRedVal = red - 4 >= 0 ? pixel.data[red - 4] : pixel.data[red];\r\n                    nextRedVal = pixel.data[red + 4];\r\n                    topRedVal = (red - WIDTH * 4) >= 0 ? pixel.data[red - WIDTH * 4] : pixel.data[red];\r\n                    bottomRedVal = pixel.data[red + WIDTH * 4];\r\n                    if (redVal != nextRedVal || redVal != topRedVal || redVal != prevRedVal || redVal != bottomRedVal) {\r\n                        opixel.data[red] = 255;\r\n                        edge.push(red);\r\n                    }\r\n                }\r\n            }\r\n            ctx.putImageData(opixel, 0, 0);\r\n        },\r\n        //画网格\r\n        drawGrid(color, stepx, stepy) {\r\n            ctx.save();\r\n            ctx.fillStyle = \"white\";\r\n            // console.log(ctx);\r\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            ctx.lineWidth = 0.3;\r\n            ctx.strokeStyle = color;\r\n            for (let i = stepx; i < ctx.canvas.width; i += stepx) {\r\n                ctx.beginPath();\r\n                ctx.moveTo(i, 0);\r\n                ctx.lineTo(i, ctx.canvas.height);\r\n                ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n            for (let j = stepy; j < ctx.canvas.height; j += stepy) {\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, j);\r\n                ctx.lineTo(ctx.canvas.width, j);\r\n                ctx.closePath();\r\n                ctx.stroke();\r\n            }\r\n            ctx.restore();\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./page_2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./page_2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./page_2.vue?vue&type=template&id=6c436132&lang=pug&\"\nimport script from \"./page_2.vue?vue&type=script&lang=js&\"\nexport * from \"./page_2.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/3.39bc7bd4.png\";"],"sourceRoot":""}