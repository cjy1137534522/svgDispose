{"version":3,"sources":["webpack:///./src/views/svg_to_canvas.vue?e78e","webpack:///src/views/svg_to_canvas.vue","webpack:///./src/views/svg_to_canvas.vue?a2c2","webpack:///./src/views/svg_to_canvas.vue","webpack:///./src/views/svg_to_canvas.vue?472d"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","ref","attrs","_v","on","$event","checkedShapeShow","domProps","_s","svg","style","height","activeTop","checkedShape","shapeId","cols","rows","selectedSeatList","length","addSeat","removeSeat","cancleSeleced","left","activeLeft","seatCanvas","paddingLeft","hoverPinkBox","width","_l","idx","key","checkedRowsOrCols","hoverRowsOrCols","startCol","paddingTop","top","startRow","directives","name","rawName","value","expression","selectedBox","checkedShapePopData","modifiers","target","composing","$set","_n","$forceUpdate","class","orderRow","orderCol","checkedShapeSeatComfrim","checkedShapeSeatCancle","hoverInfo","text","staticRenderFns","component"],"mappings":"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","file":"js/chunk-6cb43366.65033492.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"warp\"},[_c('div',{staticStyle:{\"display\":\"none\"}},[_c('img',{ref:\"iconNone\",attrs:{\"src\":require(\"../assets/seat_icon_none.svg\"),\"alt\":\"\",\"sizes\":\"\",\"srcset\":\"\"}}),_c('img',{ref:\"iconSelected\",attrs:{\"src\":require(\"../assets/seat_icon_org.svg\"),\"alt\":\"\",\"sizes\":\"\",\"srcset\":\"\"}})]),_c('div',{staticClass:\"top clear\"},[_c('router-link',{attrs:{\"to\":\"/svg_to_svg\"}},[_vm._v(\"toMap\")]),_c('img',{ref:\"iconShow\",attrs:{\"src\":require(\"../assets/seat_icon_show.svg\"),\"alt\":\"\",\"sizes\":\"\",\"srcset\":\"\",\"id\":\"500\"}}),_c('button',{on:{\"click\":function($event){_vm.checkedShapeShow=true}}},[_vm._v(\"修改区域座位信息\")])],1),_c('div',{staticClass:\"bottom clear\"},[_c('div',{staticClass:\"content-warp\"},[_c('div',{ref:\"content\",staticClass:\"content\"},[_c('div',{ref:\"svgWarp\",staticClass:\"svg-warp\",domProps:{\"innerHTML\":_vm._s(_vm.svg)}})])]),_c('div',{ref:\"activeArea\",staticClass:\"active-area\"},[_c('div',{staticClass:\"active-top\",style:({height:_vm.activeTop+'px'})},[_c('p',[_vm._v(\"shapeId:\"+_vm._s(_vm.checkedShape.shapeId)+\" cols:\"+_vm._s(_vm.checkedShape.cols)+\" rows:\"+_vm._s(_vm.checkedShape.rows))]),_c('div',{staticClass:\"btns\"},[_c('button',{attrs:{\"disabled\":_vm.selectedSeatList.length==0},on:{\"click\":_vm.addSeat}},[_vm._v(\"添加座位\")]),_c('button',{attrs:{\"disabled\":_vm.selectedSeatList.length==0},on:{\"click\":_vm.removeSeat}},[_vm._v(\"删除座位\")]),_c('button',{attrs:{\"disabled\":_vm.selectedSeatList.length==0},on:{\"click\":_vm.cancleSeleced}},[_vm._v(\"取消选择\")])]),_c('div',{staticClass:\"cols-span\",style:({left:_vm.activeLeft+_vm.seatCanvas.paddingLeft+_vm.seatCanvas.left+'px'}),on:{\"mouseout\":function($event){_vm.hoverPinkBox.width = 0;_vm.hoverPinkBox.height = 0;}}},_vm._l((_vm.checkedShape.cols),function(cols,idx){return _c('span',{key:idx,on:{\"click\":function($event){return _vm.checkedRowsOrCols(idx,false)},\"mouseover\":function($event){return _vm.hoverRowsOrCols(idx,false)}}},[_vm._v(_vm._s(_vm.checkedShape.startCol+idx)+\" 列\")])}),0)]),_c('div',{staticClass:\"active-left\",style:({width:_vm.activeLeft+'px',paddingTop:_vm.seatCanvas.paddingTop+'px'})},[_c('div',{staticClass:\"rows-span\",style:({top:_vm.seatCanvas.paddingTop+_vm.seatCanvas.top+'px'}),on:{\"mouseout\":function($event){_vm.hoverPinkBox.width = 0;_vm.hoverPinkBox.height = 0;}}},_vm._l((_vm.checkedShape.rows),function(rows,idx){return _c('span',{key:idx,on:{\"click\":function($event){return _vm.checkedRowsOrCols(idx,true)},\"mouseover\":function($event){return _vm.hoverRowsOrCols(idx,true)}}},[_vm._v(_vm._s(_vm.checkedShape.startRow+idx)+\" 排\")])}),0)]),_c('div',{ref:\"seatCanvasWarp\",staticClass:\"seat-canvas-warp\"},[_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.checkedShape.shapeId!=null&&!_vm.checkedShapeShow),expression:\"checkedShape.shapeId!=null&&!checkedShapeShow\"}],ref:\"seatCanvas\",staticClass:\"seat-canvas\",attrs:{\"id\":\"seatCanvas\"}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.selectedBox.width>0&&_vm.selectedBox.height>0&&!_vm.checkedShapeShow),expression:\"selectedBox.width>0&&selectedBox.height>0&&!checkedShapeShow\"}],ref:\"selectedBox\",staticClass:\"selected-box\",style:({width:_vm.selectedBox.width+'px',height:_vm.selectedBox.height+'px',top:_vm.selectedBox.top+'px',left:_vm.selectedBox.left+'px'})},[_vm._v(\"selectedBox\")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hoverPinkBox.width!=0),expression:\"hoverPinkBox.width!=0\"}],ref:\"hoverPinkBox\",staticClass:\"hover-box\",style:({width:_vm.hoverPinkBox.width+'px',height:_vm.hoverPinkBox.height+'px',top:_vm.hoverPinkBox.top+'px',left:_vm.hoverPinkBox.left+'px'})},[_vm._v(\"hoverPinkBox\")]),_c('div',{ref:\"onlyForAction\",staticClass:\"only-for-action\",style:({width:_vm.seatCanvas.width+'px',height:_vm.seatCanvas.height+'px'})})])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.checkedShapeShow),expression:\"checkedShapeShow\"}],staticClass:\"pop\"},[_c('div',{staticClass:\"pop-content\"},[_c('h4',[_c('span',[_vm._v(\"行：\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.checkedShapePopData.rows),expression:\"checkedShapePopData.rows\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.checkedShapePopData.rows)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.checkedShapePopData, \"rows\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_c('h4',[_c('span',[_vm._v(\"列：\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.checkedShapePopData.cols),expression:\"checkedShapePopData.cols\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.checkedShapePopData.cols)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.checkedShapePopData, \"cols\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_c('h4',[_c('span',[_vm._v(\"排座-起始行：\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.checkedShapePopData.startRow),expression:\"checkedShapePopData.startRow\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.checkedShapePopData.startRow)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.checkedShapePopData, \"startRow\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_c('h4',[_c('span',[_vm._v(\"排座-起始列（座）：\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.checkedShapePopData.startCol),expression:\"checkedShapePopData.startCol\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.checkedShapePopData.startCol)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.checkedShapePopData, \"startCol\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_c('h4',[_c('span',[_vm._v(\"横向排序方向：\")]),_c('em',{staticClass:\"radio\",class:{'checked':_vm.checkedShapePopData.orderRow==0},on:{\"click\":function($event){_vm.checkedShapePopData.orderRow=0}}},[_vm._v(\"逆时针\")]),_c('em',{staticClass:\"radio\",class:{'checked':_vm.checkedShapePopData.orderRow==1},on:{\"click\":function($event){_vm.checkedShapePopData.orderRow=1}}},[_vm._v(\"顺时针\")])]),_c('h4',[_c('span',[_vm._v(\"竖直排序方向：\")]),_c('em',{staticClass:\"radio\",class:{'checked':_vm.checkedShape.orderCol==0},on:{\"click\":function($event){_vm.checkedShapePopData.orderCol=0}}},[_vm._v(\"由里向外\")]),_c('em',{staticClass:\"radio\",class:{'checked':_vm.checkedShapePopData.orderCol==1},on:{\"click\":function($event){_vm.checkedShapePopData.orderCol=1}}},[_vm._v(\"由外向里\")])]),_c('h4',[_c('button',{on:{\"click\":_vm.checkedShapeSeatComfrim}},[_vm._v(\"确认\")]),_c('button',{on:{\"click\":_vm.checkedShapeSeatCancle}},[_vm._v(\"取消\")])])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hoverInfo.show),expression:\"hoverInfo.show\"}],staticClass:\"hover-info\",style:({left:_vm.hoverInfo.left+'px',top:_vm.hoverInfo.top+'px'})},[_c('span',[_vm._v(_vm._s(_vm.hoverInfo.text))]),_c('div')])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n.warp\n\tdiv(style=\"display:none;\")\n\t\timg( ref=\"iconNone\" src=\"../assets/seat_icon_none.svg\" alt=\"\" sizes=\"\" srcset=\"\")\n\t\timg( ref=\"iconSelected\" src=\"../assets/seat_icon_org.svg\" alt=\"\" sizes=\"\" srcset=\"\")\n\t.top.clear\n\t\trouter-link(to=\"/svg_to_svg\") toMap\n\t\timg( ref=\"iconShow\" src=\"../assets/seat_icon_show.svg\" alt=\"\" sizes=\"\" srcset=\"\" id=\"500\")\n\t\t//- button(@click=\"miniMap.show=!miniMap.show\") miniMap\n\t\tbutton(@click=\"checkedShapeShow=true\") 修改区域座位信息\n\t\t//button(@click=\"toMax\") toMax\n\t.bottom.clear\n\t\t.content-warp\n\t\t\t.content(ref=\"content\")\n\t\t\t\t.svg-warp(ref=\"svgWarp\" v-html=\"svg\")\n\t\t//- 操作区域\n\t\t.active-area(ref=\"activeArea\" )\n\t\t\t.active-top(:style=\"{height:activeTop+'px'}\")\n\t\t\t\tp shapeId:{{checkedShape.shapeId}}  cols:{{checkedShape.cols}}  rows:{{checkedShape.rows}}\n\t\t\t\t.btns\n\t\t\t\t\tbutton(@click=\"addSeat\",:disabled=\"selectedSeatList.length==0\") 添加座位\n\t\t\t\t\tbutton(@click=\"removeSeat\",:disabled=\"selectedSeatList.length==0\") 删除座位\n\t\t\t\t\tbutton(@click=\"cancleSeleced\",:disabled=\"selectedSeatList.length==0\") 取消选择\n\t\t\t\t.cols-span(:style=\"{left:activeLeft+seatCanvas.paddingLeft+seatCanvas.left+'px'}\" @mouseout=\"hoverPinkBox.width = 0;hoverPinkBox.height = 0;\")\n\t\t\t\t\tspan(v-for=\"(cols,idx) in checkedShape.cols\",:key=\"idx\" @click=\"checkedRowsOrCols(idx,false)\"  @mouseover=\"hoverRowsOrCols(idx,false)\" ) {{checkedShape.startCol+idx}} 列\n\t\t\t.active-left(:style=\"{width:activeLeft+'px',paddingTop:seatCanvas.paddingTop+'px'}\")\n\t\t\t\t.rows-span(:style=\"{top:seatCanvas.paddingTop+seatCanvas.top+'px'}\" @mouseout=\"hoverPinkBox.width = 0;hoverPinkBox.height = 0;\")\n\t\t\t\t\tspan(v-for=\"(rows,idx) in checkedShape.rows\",:key=\"idx\" @click=\"checkedRowsOrCols(idx,true)\" @mouseover=\"hoverRowsOrCols(idx,true)\"  ) {{checkedShape.startRow+idx}} 排\n\t\t\t.seat-canvas-warp(ref=\"seatCanvasWarp\")\n\t\t\t\tcanvas.seat-canvas(v-show=\"checkedShape.shapeId!=null&&!checkedShapeShow\" id=\"seatCanvas\" ref=\"seatCanvas\")\n\t\t\t\t.selected-box( ref=\"selectedBox\" v-show=\"selectedBox.width>0&&selectedBox.height>0&&!checkedShapeShow\" ,:style=\"{width:selectedBox.width+'px',height:selectedBox.height+'px',top:selectedBox.top+'px',left:selectedBox.left+'px'}\") selectedBox\n\t\t\t\t.hover-box(ref=\"hoverPinkBox\" v-show=\"hoverPinkBox.width!=0\" ,:style=\"{width:hoverPinkBox.width+'px',height:hoverPinkBox.height+'px',top:hoverPinkBox.top+'px',left:hoverPinkBox.left+'px'}\") hoverPinkBox\n\t\t\t\t.only-for-action(ref=\"onlyForAction\",:style=\"{width:seatCanvas.width+'px',height:seatCanvas.height+'px'}\")\n\t.pop(v-show=\"checkedShapeShow\")\n\t\t.pop-content\n\t\t\th4\n\t\t\t\tspan 行：\n\t\t\t\tinput(type=\"number\" v-model.number=\"checkedShapePopData.rows\")\n\t\t\th4\n\t\t\t\tspan 列：\n\t\t\t\tinput(type=\"number\" v-model.number=\"checkedShapePopData.cols\")\n\t\t\th4\n\t\t\t\tspan 排座-起始行：\n\t\t\t\tinput(type=\"number\" v-model.number=\"checkedShapePopData.startRow\")\n\t\t\th4\n\t\t\t\tspan 排座-起始列（座）：\n\t\t\t\tinput(type=\"number\" v-model.number=\"checkedShapePopData.startCol\")\n\t\t\th4\n\t\t\t\tspan 横向排序方向：\n\t\t\t\tem.radio(:class=\"{'checked':checkedShapePopData.orderRow==0}\" @click=\"checkedShapePopData.orderRow=0\") 逆时针\n\t\t\t\tem.radio(:class=\"{'checked':checkedShapePopData.orderRow==1}\" @click=\"checkedShapePopData.orderRow=1\") 顺时针\n\t\t\th4\n\t\t\t\tspan 竖直排序方向：\n\t\t\t\tem.radio( :class=\"{'checked':checkedShape.orderCol==0}\" @click=\"checkedShapePopData.orderCol=0\") 由里向外\n\t\t\t\tem.radio( :class=\"{'checked':checkedShapePopData.orderCol==1}\" @click=\"checkedShapePopData.orderCol=1\") 由外向里\n\t\t\th4\n\t\t\t\tbutton(@click=\"checkedShapeSeatComfrim\") 确认\n\t\t\t\tbutton(@click=\"checkedShapeSeatCancle\") 取消\n\t.hover-info(v-show=\"hoverInfo.show\" :style=\"{left:hoverInfo.left+'px',top:hoverInfo.top+'px'}\")\n\t\tspan {{hoverInfo.text}}\n\t\tdiv\n</template>\n\n<script>\n// @ is an alias to /src\nimport TOOLS from '@/utils/tools.js'\nimport COMMON from '@/utils/common.js'\nlet _this = null,\n    contentWarp = null,\n    svgWarp = null,\n    svgDom = null,\n    move_x = 0,\n    move_y = 0,\n    warpIsDragging = false;\nlet canvas = null,\n    ctx = null;\nexport default {\n    name: \"\",\n    components: {},\n    data() {\n        return {\n            pageVisible: true,\n            errorRange: 50,\n\n            seatCanvasWarp: {\n                dom: null,\n                offsetLeft: 0,\n                offsetTop: 0\n            },\n            seatCanvas: {\n                dom: \"\",\n                ctx: null,\n                width: 0,\n                height: 0,\n                paddingLeft: 20,\n                paddingTop: 20,\n                seatWdith: 20,\n                seatHeight: 20,\n                seatMarginRight: 5,\n                seatMarginBottom: 5,\n                top: 0,\n                left: 0\n            },\n            selectCanvas: {\n                dom: \"\",\n                ctx: null\n            },\n            activeTop: 100,\n            activeLeft: 50,\n\n            selectedBox: {\n                width: 0,\n                height: 0,\n                top: 0,\n                left: 0\n            },\n            selectedSeatList: [],\n\n            hoverPinkBox: {\n                width: 0,\n                height: 0,\n                top: 0,\n                left: 0\n            },\n\n\n            hoverInfo: {\n                show: false,\n                text: \"\",\n                top: 0,\n                left: 0\n            },\n\n            //切割成多少个canvas\n            canvasSplit: {\n                row: 7,\n                col: 7\n            },\n\n            canvasList: [], //二维数组\n\n            batchAction: false, //批量操作\n\n            // wheelMax: 1,//最大缩放值\n            wheelMax: 1.3, //最大缩放值\n\n            wheelNum: 0, //当前缩放值\n            wheelMin: 0, //最小缩放值\n\n            center: {\n                find: false,\n                x: 0,\n                y: 0\n            },\n            canvas: {\n                left: 0,\n                top: 0\n            },\n\n            svg: \"\",\n\n            maxWidth: 0,\n            maxHeight: 0,\n            setWidth: 0,\n            setHeight: 0,\n            minWidth: 0,\n            minHeight: 0,\n\n            position: {\n                left: 0,\n                top: 0\n            },\n            cont: {\n                width: 0,\n                height: 0,\n                offsetLeft: 0,\n                offsetTop: 0,\n                center: []\n            },\n            miniMap: {\n                show: true,\n                width: 0,\n                height: 0\n            },\n            checkBox: {\n                width: 0,\n                height: 0,\n                top: 0,\n                left: 0,\n            },\n\n            seatIcon: { //座位图标\n                iconShow: \"\",\n                iconNone: \"\",\n                width: 20,\n                height: 20,\n                marginRight: 5,\n                marginBottom: 5\n            },\n\n            checkedShapeShow: false,\n            checkedShapePopData: {\n                shapeId: null,\n                rows: 0,\n                cols: 0,\n                startRow: 0, //排座的开始行\n                startCol: 0, //排座的开始列（座）\n                orderRow: 0, //横向排序方向：0：逆时针  1：反向\n                orderCol: 0 //纵向排序方向：0：从里向外  1：反向\n            },\n            checkedShape: {\n                shapeId: null,\n                rows: 0,\n                cols: 0,\n                startRow: 0, //排座的开始行\n                startCol: 0, //排座的开始列（座）\n                orderRow: 0, //横向排序方向：0：逆时针  1：反向\n                orderCol: 0 //纵向排序方向：0：从里向外  1：反向\n                // seats:[]\n            },\n            checkedShapeIdx: null,\n\n            shapeList: [\n                // {\n                //     cenPoint:[0,0],\n                //     angle:0,\n                //     shapeId:0,\n                //     rows:10,\n                //     cols:10,\n                //     startRow:2,//排座的开始行\n                //     startCol:2,//排座的开始列（座）\n                //     seats:[\n                //        [ {seatId:0,status:0,ticketLevel:0},{seatId:2,status:0,ticketLevel:0}],\n                //        [ {seatId:7,status:0,ticketLevel:0},{seatId:5,status:0,ticketLevel:0}],\n                //        [ {seatId:6,status:0,ticketLevel:0},{seatId:4,status:0,ticketLevel:0}]\n                //     ]\n                // }\n            ],\n            renderList: [], //已经渲染的shape\n            viewBoxList: [] //当前可视区域内的shape\n        };\n    },\n    computed: {},\n    watch: {\n        shapeList: {\n            handler(newVal) {\n                this.saveAction()\n            },\n            deep: true\n        },\n        checkedShape: {\n            handler(shape, oldShape) {\n                if (shape.shapeId == oldShape.shapeId && shape.cols == oldShape.cols && shape.rows == oldShape.rows) return false;\n                if (shape.cols == 0 || shape.rows == 0) {\n                    this.checkedShapeShow = true;\n                } else {\n                    this.drawSeatCanvas(shape)\n                }\n            },\n            deep: true\n        }\n    },\n    created() {\n        _this = this;\n        if (localStorage.getItem(\"shapeList\")) {\n            this.shapeList = JSON.parse(localStorage.getItem(\"shapeList\"));\n        }\n        if (localStorage.getItem(\"seatIcon\")) {\n            this.seatIcon = JSON.parse(localStorage.getItem(\"seatIcon\"));\n        }\n    },\n    mounted() {\n        this.pageInit()\n\n    },\n    beforeDestroy() {\n\n    },\n    methods: {\n        pageInit() {\n            // this.judgePageActive()\n            this.svg = _svg;\n            // this.svg = _svgBaobao;\n            //canvas init\n            this.seatCanvasInit()\n\n            this.$nextTick(() => {\n                this.svgInit();\n            });\n        },\n        seatCanvasInit() {\n            this.seatCanvasWarp.dom = this.$refs.seatCanvasWarp;\n            this.seatCanvasWarp.dom.addEventListener(\"scroll\", this.seatCanvasWarpScroll)\n            this.seatCanvasWarp.offsetLeft = this.seatCanvasWarp.dom.offsetLeft;\n            this.seatCanvasWarp.offsetTop = this.seatCanvasWarp.dom.offsetTop;\n\n\n            this.seatCanvas.dom = this.$refs.seatCanvas;\n            this.seatCanvas.ctx = this.$refs.seatCanvas.getContext(\"2d\");\n            // this.selectCanvas.dom = this.$refs.selectCanvas;\n            // this.selectCanvas.ctx = this.$refs.selectCanvas.getContext(\"2d\");\n\n            this.seatCanvasBindAction()\n\n        },\n        seatCanvasBindAction() { //seatCanvas绑定鼠标事件\n            let onlyForAction = this.$refs.onlyForAction;\n            onlyForAction.onmousedown = function(e) { //点击\n                _this.selectedBox.width = 0;\n                _this.selectedBox.height = 0;\n                //鼠标坐标点\n                let clickX = e.clientX - _this.seatCanvasWarp.offsetLeft - _this.seatCanvas.left;\n                let clickY = e.clientY - _this.seatCanvasWarp.offsetTop - _this.seatCanvas.top;\n                let clickPoint = [clickX, clickY]\n                let seat_width = _this.seatCanvas.seatWdith + _this.seatCanvas.seatMarginRight;\n                let seat_height = _this.seatCanvas.seatHeight + _this.seatCanvas.seatMarginBottom;\n                let max_width = _this.checkedShape.cols * seat_width + _this.seatCanvas.paddingLeft * 2 - _this.seatCanvas.seatMarginRight;\n                let max_height = _this.checkedShape.rows * seat_height + _this.seatCanvas.paddingTop * 2 - _this.seatCanvas.seatMarginBottom;\n\n                onlyForAction.onmousemove = function(e) { //拖拽\n                    let width = e.clientX - clickX - _this.seatCanvasWarp.offsetLeft - _this.seatCanvas.left;\n                    let height = e.clientY - clickY - _this.seatCanvasWarp.offsetTop - _this.seatCanvas.top;\n                    if (clickX + width > max_width) {\n                        width = max_width - clickX\n                    }\n                    if (clickY + height > max_height) {\n                        height = max_height - clickY\n                    }\n                    if (width > 0) {\n                        _this.selectedBox.left = clickX;\n                    } else {\n                        _this.selectedBox.left = clickX - Math.abs(width);\n                    }\n                    if (height > 0) {\n                        _this.selectedBox.top = clickY;\n                    } else {\n                        _this.selectedBox.top = clickY - Math.abs(height);\n                    }\n                    clickPoint = [_this.selectedBox.left, _this.selectedBox.top]\n                    if (Math.abs(width) > 20 && Math.abs(height) > 20) {\n                        _this.selectedBox.width = Math.abs(width);\n                        _this.selectedBox.height = Math.abs(height);\n                    }\n\n                }\n                onlyForAction.onmouseup = function(e) { //鼠标弹起\n                    onlyForAction.onmousemove = null;\n                    onlyForAction.onmouseup = null;\n                    onlyForAction.onmouseout = null;\n                    _this.endAction(clickPoint, seat_width, seat_height)\n                }\n                onlyForAction.onmouseout = function(e) { //鼠标弹起\n                    onlyForAction.onmousemove = null;\n                    onlyForAction.onmouseup = null;\n                    onlyForAction.onmouseout = null;\n                    _this.endAction(clickPoint, seat_width, seat_height)\n                }\n            }\n\n        },\n        endAction(clickPoint, seat_width, seat_height) {\n            //点击事件\n            if (this.selectedBox.width == 0 && this.selectedBox.height == 0) {\n                let seat = []\n                for (let i = 0; i < this.checkedShape.cols; i++) {\n                    let real_x = i * seat_width + this.seatCanvas.paddingLeft;\n                    for (let j = 0; j < this.checkedShape.rows; j++) {\n                        let real_y = j * seat_height + this.seatCanvas.paddingTop;\n                        let seatPoint = [real_x + this.seatCanvas.seatWdith / 2, real_y + this.seatCanvas.seatHeight / 2]\n                        if (TOOLS.getDisance1(seatPoint, clickPoint) < this.seatCanvas.seatWdith / 2) {\n                            seat = [j, i];\n                            break;\n                        }\n                        if (seat.length != 0) break;\n                    }\n                    if (seat.length != 0) break;\n                }\n                if (seat.length == 0) return false;\n                let real_x = seat[1] * seat_width + this.seatCanvas.paddingLeft;\n                let real_y = seat[0] * seat_height + this.seatCanvas.paddingTop;\n                if (this.selectedSeatList.length != 0) {\n                    //已经有选中的了\n                    let hasIdx = -1;\n                    for (let i = 0; i < this.selectedSeatList.length; i++) {\n                        let selcted_seat = this.selectedSeatList[i];\n                        if (selcted_seat.toString() == seat.toString()) {\n                            hasIdx = i;\n                            break;\n                        }\n                    }\n                    if (hasIdx != -1) { //相等表明是取消操作，显示该座位本来状态\n                        this.seatCanvas.ctx.beginPath();\n                        if (this.checkedShape.seats[seat[0]][seat[1]].status == 0) {\n                            this.seatCanvas.ctx.drawImage(this.seatIcon.iconShow, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                        } else if (this.checkedShape.seats[seat[0]][seat[1]].status == -1) {\n                            this.seatCanvas.ctx.drawImage(this.seatIcon.iconNone, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                        }\n                        this.$delete(this.selectedSeatList, hasIdx);\n                    } else {\n                        //添加，选中座位\n                        this.seatCanvas.ctx.beginPath();\n                        this.seatCanvas.ctx.drawImage(this.seatIcon.iconSelected, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                        this.selectedSeatList.push(seat);\n                    }\n                } else {\n                    //单个座位状态切换\n                    let seatPoint = [real_x + this.seatCanvas.seatWdith / 2, real_y + this.seatCanvas.seatHeight / 2]\n                    if (this.checkedShape.seats[seat[0]][seat[1]].status == 0) {\n                        this.checkedShape.seats[seat[0]][seat[1]].status = -1;\n                    } else {\n                        this.checkedShape.seats[seat[0]][seat[1]].status = 0;\n                    }\n                    this.seatCanvas.ctx.beginPath();\n                    if (this.checkedShape.seats[seat[0]][seat[1]].status == 0) {\n                        this.seatCanvas.ctx.drawImage(this.seatIcon.iconShow, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                    } else if (this.checkedShape.seats[seat[0]][seat[1]].status == -1) {\n                        this.seatCanvas.ctx.drawImage(this.seatIcon.iconNone, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                    }\n                    this.checkedShape = this.orderSeats({\n                        ...this.checkedShape\n                    })\n                    //更新数据到shapeList中\n                    this.$set(this.shapeList, this.checkedShapeIdx, {\n                        ...this.checkedShape\n                    })\n                }\n            } else {\n                //拖拽事件，判断当前选中的座位\n                let endPoint = [clickPoint[0] + this.selectedBox.width, clickPoint[1] + this.selectedBox.height];\n                let selectedList = [];\n                for (let i = 0; i < this.checkedShape.cols; i++) {\n                    let real_x = i * seat_width + this.seatCanvas.paddingLeft;\n                    for (let j = 0; j < this.checkedShape.rows; j++) {\n                        let real_y = j * seat_height + this.seatCanvas.paddingTop;\n                        let point1 = [real_x, real_y];\n                        let point2 = [real_x + this.seatCanvas.seatWdith, real_y + this.seatCanvas.seatHeight];\n                        if (\n                            point1[0] >= clickPoint[0] && point1[0] <= endPoint[0] &&\n                            point2[0] >= clickPoint[0] && point2[0] <= endPoint[0] &&\n                            point1[1] >= clickPoint[1] && point1[1] <= endPoint[1] &&\n                            point2[1] >= clickPoint[1] && point2[1] <= endPoint[1]\n                        ) {\n                            this.seatCanvas.ctx.beginPath();\n                            this.seatCanvas.ctx.drawImage(this.seatIcon.iconSelected, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                            selectedList.push([j, i])\n                        }\n                    }\n                }\n                this.selectedSeatList.push(...selectedList);\n            }\n        },\n        checkedRowsOrCols(idx, type) {\n            // 是选择row还是col，true==row\n            let list = []\n            let seat_width = _this.seatCanvas.seatWdith + _this.seatCanvas.seatMarginRight;\n            let seat_height = _this.seatCanvas.seatHeight + _this.seatCanvas.seatMarginBottom;\n            let row = type ? idx : 0;\n            let col = type ? 0 : idx;\n            let len = type ? this.checkedShape.rows : this.checkedShape.cols;\n            for (let j = 0; j < len; j++) {\n                if (type) {\n                    col = j\n                } else {\n                    row = j;\n                }\n                let real_x = col * seat_height + _this.seatCanvas.paddingTop;\n                let real_y = row * seat_width + _this.seatCanvas.paddingLeft;\n                //判断是否已经在selectedSeatList存在\n                let has = false;\n                _this.seatCanvas.ctx.beginPath();\n                for (let i = 0; i < _this.selectedSeatList.length; i++) {\n                    if (_this.selectedSeatList[i].toString() == [row, col].toString()) {\n                        has = true;\n                        break;\n                    }\n                }\n                if (!has) {\n                    _this.seatCanvas.ctx.drawImage(_this.seatIcon.iconSelected, real_x, real_y, _this.seatCanvas.seatWdith, _this.seatCanvas.seatHeight);\n                    list.push([row, col])\n                }\n            }\n            this.selectedSeatList.push(...list)\n        },\n        hoverRowsOrCols(idx, type) {\n            let seat_width = this.seatCanvas.seatWdith + this.seatCanvas.seatMarginRight;\n            let seat_height = this.seatCanvas.seatHeight + this.seatCanvas.seatMarginBottom;\n            if (type) {\n                // row\n                this.hoverPinkBox.width = this.checkedShape.cols * seat_width + this.seatCanvas.paddingLeft * 2 - this.seatCanvas.seatMarginRight;\n                this.hoverPinkBox.height = this.seatCanvas.seatHeight;\n                this.hoverPinkBox.left = 0;\n                this.hoverPinkBox.top = idx * seat_height + this.seatCanvas.paddingTop;\n            } else {\n                // col\n                this.hoverPinkBox.width = this.seatCanvas.seatWdith;\n                this.hoverPinkBox.height = this.checkedShape.rows * seat_height + this.seatCanvas.paddingTop * 2 - this.seatCanvas.seatMarginBottom;\n                this.hoverPinkBox.left = idx * seat_width + this.seatCanvas.paddingLeft;\n                this.hoverPinkBox.top = 0;\n            }\n\n        },\n        cancleSeleced() {\n            this.drawSeatCanvas(this.checkedShape)\n        },\n        addSeat() {\n            let seats = [...this.checkedShape.seats]\n            this.selectedSeatList.forEach(seat => {\n                seats[seat[0]][seat[1]].status = 0\n            })\n            this.checkedShape.seats = seats\n            this.checkedShape = this.orderSeats({\n                ...this.checkedShape\n            })\n            this.drawSeatCanvas(this.checkedShape)\n            this.$set(this.shapeList, this.checkedShapeIdx, {\n                ...this.checkedShape\n            })\n        },\n        removeSeat() {\n            let seats = [...this.checkedShape.seats]\n            this.selectedSeatList.forEach(seat => {\n                seats[seat[0]][seat[1]].status = -1\n            })\n            this.checkedShape.seats = seats;\n            this.checkedShape = this.orderSeats({\n                ...this.checkedShape\n            })\n            this.drawSeatCanvas(this.checkedShape)\n            this.$set(this.shapeList, this.checkedShapeIdx, {\n                ...this.checkedShape\n            })\n        },\n        orderSeats(shape) { //排座\n            let seats = shape.seats;\n            let rowString = 0;\n            for (let row = 0; row < shape.rows; row++) {\n                //只有当整行没有任何座位的时候才不计算\n                let count = 0;\n                for (let col = 0; col < shape.cols; col++) {\n                    if (seats[row][col].status != -1) count += 1;\n                }\n                if (count != 0) rowString += 1;\n                let colString = 0;\n                for (let col = 0; col < shape.cols; col++) {\n                    let seatInfo = seats[row][col];\n                    seatInfo.rowString = rowString\n                    if (seatInfo.status != -1) {\n                        colString += 1;\n                        seatInfo.colString = colString\n                    } else {\n                        seatInfo.colString = \"-1\"\n                    }\n                }\n            }\n            return shape;\n        },\n        drawSeatCanvas(shape) {\n            this.selectedBox = {\n                width: 0,\n                height: 0,\n                top: 0,\n                left: 0\n            };\n            this.selectedSeatList = [];\n            this.seatCanvas.ctx.clearRect(0, 0, this.seatCanvas.width, this.seatCanvas.height);\n            // this.selectCanvas.ctx.clearRect(0, 0, this.seatCanvas.width, this.seatCanvas.height);\n\n            let seat_width = this.seatCanvas.seatWdith + this.seatCanvas.seatMarginRight;\n            let seat_height = this.seatCanvas.seatHeight + this.seatCanvas.seatMarginBottom;\n            this.seatCanvas.width = shape.cols * seat_width + this.seatCanvas.paddingLeft * 2 - this.seatCanvas.seatMarginRight;\n            this.seatCanvas.height = shape.rows * seat_height + this.seatCanvas.paddingTop * 2 - this.seatCanvas.seatMarginBottom;\n            this.seatCanvas.dom.width = this.seatCanvas.width;\n            this.seatCanvas.dom.height = this.seatCanvas.height;\n\n            // this.selectCanvas.dom.width = this.seatCanvas.width;\n            // this.selectCanvas.dom.height = this.seatCanvas.height;\n\n            //绘制中线\n            // 垂直线\n            this.seatCanvas.ctx.strokeStyle = 'green';\n            this.seatCanvas.ctx.lineWidth = 2;\n            this.seatCanvas.ctx.beginPath();\n            this.seatCanvas.ctx.moveTo(this.seatCanvas.width / 2, 0);\n            this.seatCanvas.ctx.lineTo(this.seatCanvas.width / 2, this.seatCanvas.height);\n            this.seatCanvas.ctx.setLineDash([8, 10]);\n            this.seatCanvas.ctx.lineCap = \"round\";\n            this.seatCanvas.ctx.stroke();\n            this.seatCanvas.ctx.closePath();\n            //水平线\n            this.seatCanvas.ctx.beginPath();\n            this.seatCanvas.ctx.moveTo(0, this.seatCanvas.height / 2);\n            this.seatCanvas.ctx.lineTo(this.seatCanvas.width, this.seatCanvas.height / 2);\n            this.seatCanvas.ctx.stroke();\n            this.seatCanvas.ctx.closePath();\n\n            this.$nextTick(() => {\n                for (let i = 0; i < shape.cols; i++) {\n                    let real_x = i * seat_width + this.seatCanvas.paddingLeft\n                    for (let j = 0; j < shape.rows; j++) {\n                        let real_y = j * seat_height + this.seatCanvas.paddingTop;\n                        this.seatCanvas.ctx.beginPath();\n                        if (shape.seats[j][i].status == 0) {\n                            this.seatCanvas.ctx.drawImage(this.seatIcon.iconShow, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                        } else if (shape.seats[j][i].status == -1) {\n                            this.seatCanvas.ctx.drawImage(this.seatIcon.iconNone, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                        }\n                    }\n                }\n            })\n        },\n        seatCanvasWarpScroll() {\n            let top = this.$refs.seatCanvasWarp.scrollTop;\n            let left = this.$refs.seatCanvasWarp.scrollLeft;\n            this.seatCanvas.left = -left;\n            this.seatCanvas.top = -top;\n        },\n        seatCanvasClick(e) {\n            //鼠标坐标点\n            let clickX = e.clientX - this.seatCanvasWarp.offsetLeft - this.seatCanvas.left;\n            let clickY = e.clientY - this.seatCanvasWarp.offsetTop - this.seatCanvas.top;\n            let clickPoint = [clickX, clickY]\n            let seat_width = this.seatCanvas.seatWdith + this.seatCanvas.seatMarginRight;\n            let seat_height = this.seatCanvas.seatHeight + this.seatCanvas.seatMarginBottom;\n            // let shape = this.checkedShape\n            let seat = []\n            for (let i = 0; i < this.checkedShape.cols; i++) {\n                let real_x = i * seat_width + this.seatCanvas.paddingLeft;\n                for (let j = 0; j < this.checkedShape.rows; j++) {\n                    let real_y = j * seat_height + this.seatCanvas.paddingTop;\n                    let seatPoint = [real_x + this.seatCanvas.seatWdith / 2, real_y + this.seatCanvas.seatHeight / 2]\n                    if (TOOLS.getDisance1(seatPoint, clickPoint) < this.seatCanvas.seatWdith / 2) {\n                        seat = [j, i];\n                        if (this.checkedShape.seats[j][i].status == 0) {\n                            this.checkedShape.seats[j][i].status = -1;\n                        } else {\n                            this.checkedShape.seats[j][i].status = 0;\n                        }\n                        this.seatCanvas.ctx.beginPath();\n                        if (this.checkedShape.seats[j][i].status == 0) {\n                            this.seatCanvas.ctx.drawImage(this.seatIcon.iconShow, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                        } else if (this.checkedShape.seats[j][i].status == -1) {\n                            this.seatCanvas.ctx.drawImage(this.seatIcon.iconNone, real_x, real_y, this.seatCanvas.seatWdith, this.seatCanvas.seatHeight);\n                        }\n                        //更新数据到shapeList中\n                        this.shapeList[this.checkedShapeIdx].seats[j][i].status = this.checkedShape.seats[j][i].status;\n                        break;\n                    }\n                    if (seat.length != 0) break;\n                }\n            }\n        },\n        svgInit() {\n            svgWarp = this.$refs.svgWarp;\n            svgDom = svgWarp.firstElementChild;\n\n            // svgDom.onmousedown = this.warpClick;\n\n            // svgDom.onmouseup = this.warpDataInit;\n\n            // svgDom.onmouseout = this.warpDataInit;\n\n            // svgDom.onmousemove = this.warpDrag;\n            // 获取到shapeList的所有shapeId集合\n            let shapeIds = this.shapeList.map(item => item.shapeId);\n            // console.log(shapeIds)\n            //给元素设定id\n            let domList = svgDom.childNodes;\n            let id_num = 0;\n            domList.forEach(item => {\n                /* 元素节点\t1,属性节点\t2,文本节点\t3,注释节点（comment）\t8,document\t9,DocumentFragment\t11 */\n                if (item.nodeType == 1 && item.nodeName != \"text\" && item.nodeName != \"title\") {\n                    let curId = ++id_num;\n                    item.setAttribute(\"id\", curId);\n                    let findIdx = shapeIds.indexOf(curId + \"\");\n                    if (findIdx != -1) {\n                        if (this.shapeList[findIdx].rows > 0 && this.shapeList[findIdx].cols > 0) {\n                            item.style.fill = \"rgba(255, 192, 203, 0.74)\";\n                        }\n                    }\n                }\n            })\n\n            let viewBox = svgDom.getAttribute(\"viewBox\").split(\" \")\n            this.center = {\n                find: true,\n                x: parseFloat(viewBox[2]) / 2,\n                y: parseFloat(viewBox[3]) / 2\n            }\n            let conWidth = this.$refs.content.clientWidth,\n                conHeight = this.$refs.content.clientHeight;\n            svgDom.setAttribute(\"width\", conWidth)\n            svgDom.setAttribute(\"height\", conHeight)\n            //给shape绑定选中事件\n            svgDom.addEventListener(\"click\", _this.shapeCheckedAction)\n\n            //座位图标初始化\n            this.seatIconInit()\n        },\n        shapeCheckedAction(e) {\n            let shape = e.target;\n            let name = shape.nodeName;\n            if (name != \"path\" && name != \"rect\" && name != \"polygon\") return false;\n\n            let shapeObj = [];\n            let shapeId = shape.getAttribute(\"id\");\n            // 获取到shapeList的所有shapeId集合\n            let shapeIds = this.shapeList.map(item => item.shapeId);\n            if (shapeIds.indexOf(shapeId) == -1) {\n                // shape.style.fill = \"rgba(255, 192, 203, 0.74)\";\n                //id没有存在在列表中表明，还没有点击过这个shape\n                //获取shape在svg中的一些原始 start\n                let result = null;\n                switch (name) {\n                    case \"path\":\n                        result = TOOLS.pathDecompose([this.center.x, this.center.y], shape.getAttribute(\"d\"));\n                        break;\n                    case \"polygon\":\n                        result = TOOLS.polygonDecompose([this.center.x, this.center.y], shape.getAttribute(\"points\"));\n                        break;\n                    case \"rect\":\n                        let width = shape.getAttribute(\"width\");\n                        let height = shape.getAttribute(\"height\");\n                        let x = shape.getAttribute(\"x\");\n                        let y = shape.getAttribute(\"y\");\n                        result = TOOLS.rectDecompose([this.center.x, this.center.y], x, y, width, height);\n                        break;\n                    default:\n                        console.log(name);\n                        break;\n                }\n                //获取shape在svg中的一些原始 end\n                if (result == null) return false;\n                shapeObj = {\n                    ...result,\n                    shapeId,\n                    rows: 0,\n                    cols: 0,\n                    startRow: 1,\n                    startCol: 1,\n                    orderRow: 0, //横向排序方向：0：逆时针  1：反向\n                    orderCol: 0, //纵向排序方向：0：从里向外  1：反向\n                    seats: []\n                }\n                // this.shapeList.push({\n                //     ...shapeObj\n                // });\n                // this.checkedShapeIdx = this.shapeList.length;\n                this.toggleCheckedShapeStatus({\n                    ...shapeObj\n                }, {\n                    ...this.checkedShape\n                })\n                this.checkedShapeShow = true;\n                this.checkedShapePopData = {\n                    ...shapeObj\n                };\n                //没有设置座位区域，需要先让用户设置区域座位信息\n\n\n            } else {\n                let shapeIndex = shapeIds.indexOf(shapeId)\n                shapeObj = JSON.parse(JSON.stringify(this.shapeList[shapeIndex]))\n\n\n                //没有设置座位区域，需要先让用户设置区域座位信息\n                if (this.checkedShape.shapeId != shapeObj.shapeId) {\n                    this.toggleCheckedShapeStatus(shapeObj, {\n                        ...this.checkedShape\n                    })\n                    this.checkedShape = shapeObj;\n                    let shapeIds = this.shapeList.map(item => item.shapeId);\n                    this.checkedShapeIdx = shapeIds.indexOf(shapeId);\n                    return false;\n                }\n\n            }\n        },\n        toggleCheckedShapeStatus(shape, originShape = false) { //选中shape显示状态切换\n            if (originShape && originShape.shapeId) {\n                if (shape.shapeId == originShape.shapeId) return false;\n                document.getElementById(originShape.shapeId).style.stroke = \"#333\";\n                document.getElementById(originShape.shapeId).style.strokeWidth = 1;\n            }\n            document.getElementById(shape.shapeId).style.strokeWidth = 16;\n            document.getElementById(shape.shapeId).style.stroke = \"green\";\n            document.getElementById(\"500\").setAttribute(\"style\", \"transform: rotate(\" + shape.angle + \"deg);transform-origin: 50% 50%;\");\n        },\n        checkedShapeSeatComfrim() { //保存设置行列\n            this.checkedShapeShow = false;\n            let shape = {\n                ...this.checkedShapePopData\n            };\n            //生成座位\n            let seatIdStart = 0;\n            shape.seats = [];\n            //先循环行，再循环列\n            if (shape.orderRow == 0) { //逆时针\n                for (let i = 0; i < shape.rows; i++) {\n                    let rowList = [];\n                    if (shape.orderCol == 0) { //从里向外\n                        for (let j = 0; j < shape.cols; j++) {\n                            let seat = {\n                                seatId: seatIdStart++,\n                                status: 0,\n                                rowString: shape.startRow + i,\n                                colString: shape.startCol + j,\n                                level: 0\n                            }\n                            rowList.push(seat);\n                        }\n                    } else { //反向\n                        for (let j = shape.cols - 1; j > -1; j--) {\n                            let seat = {\n                                seatId: seatIdStart++,\n                                status: 0,\n                                rowString: shape.startRow + i,\n                                colString: shape.startCol + j,\n                                level: 0\n                            }\n                            rowList.push(seat);\n                        }\n                    }\n                    shape.seats.push(rowList)\n                }\n            } else { //顺时针\n                for (let i = shape.rows - 1; i > -1; i--) {\n                    let rowList = [];\n                    if (shape.orderCol == 0) { //从里向外\n                        for (let j = 0; j < shape.cols; j++) {\n                            let seat = {\n                                seatId: seatIdStart++,\n                                status: 0,\n                                rowString: shape.startRow + i,\n                                colString: shape.startCol + j,\n                                level: 0\n                            }\n                            rowList.push(seat);\n                        }\n                    } else { //反向\n                        for (let j = shape.cols - 1; j > -1; j--) {\n                            let seat = {\n                                seatId: seatIdStart++,\n                                status: 0,\n                                rowString: shape.startRow + i,\n                                colString: shape.startCol + j,\n                                level: 0\n                            }\n                            rowList.push(seat);\n                        }\n                    }\n                    shape.seats.push(rowList)\n                }\n            }\n            //把数据保存到shapeList中\n            let shapeId = shape.shapeId;\n            let shapeIds = this.shapeList.map(item => item.shapeId);\n            let shapeIndex = shapeIds.indexOf(shapeId);\n            if (shapeIndex != -1) {\n                this.$set(this.shapeList, shapeIndex, {\n                    ...shape\n                });\n            } else {\n                //说明是第一次保存\n                this.shapeList.push({\n                    ...shape\n                })\n            }\n            this.checkedShape = {\n                ...shape\n            }\n            this.checkedShape = this.orderSeats({\n                ...this.checkedShape\n            })\n            let renderIds = this.renderList.map(item => item.shapeId);\n            let renderIndex = renderIds.indexOf(shapeId);\n            if (renderIndex != -1) {\n                this.$set(this.renderList, renderIndex, {\n                    ...shape\n                });\n            } else {\n                this.renderList.push({\n                    ...shape\n                })\n            }\n            this.viewBoxList.push({\n                ...shape\n            })\n            document.getElementById(shape.shapeId).style.fill = \"rgba(255, 192, 203, 0.74)\";\n        },\n        checkedShapeSeatCancle() { //取消设置行列\n            console.log(\"checkedShapeSeatCancle..........\")\n            this.checkedShapeShow = false;\n            this.toggleCheckedShapeStatus({\n                ...this.checkedShape\n            }, {\n                ...this.checkedShapePopData\n            })\n        },\n        //座位信息 start\n        seatIconInit() { //座位图标初始化\n            this.seatIcon.iconShow = this.$refs.iconShow;\n            this.seatIcon.iconNone = this.$refs.iconNone;\n            this.seatIcon.iconSelected = this.$refs.iconSelected;\n        },\n        //座位信息 end\n        judgePageActive() { //判断当前页面是否是激活状态\n\n            var hidden, state, visibilityChange;\n            if (typeof document.hidden !== \"undefined\") {\n                hidden = \"hidden\";\n                visibilityChange = \"visibilitychange\";\n                state = \"visibilityState\";\n            } else if (typeof document.mozHidden !== \"undefined\") {\n                hidden = \"mozHidden\";\n                visibilityChange = \"mozvisibilitychange\";\n                state = \"mozVisibilityState\";\n            } else if (typeof document.msHidden !== \"undefined\") {\n                hidden = \"msHidden\";\n                visibilityChange = \"msvisibilitychange\";\n                state = \"msVisibilityState\";\n            } else if (typeof document.webkitHidden !== \"undefined\") {\n                hidden = \"webkitHidden\";\n                visibilityChange = \"webkitvisibilitychange\";\n                state = \"webkitVisibilityState\";\n            }\n\n            // 添加监听器,监听当前是否活动页面\n            document.addEventListener(visibilityChange, function() {\n                if (document[state] == \"hidden\") {\n                    console.log(\"hidden............\")\n                    let time = setTimeout(() => {\n                        this.pageVisible = false;\n                    }, 10000)\n                    document.title = document[state];\n                } else {\n                    console.log(\"visible............\")\n                    if (this.pageVisible == false) this.pageVisible = true;\n                }\n            })\n        },\n        saveAction() {\n            localStorage.setItem(\"shapeList\", JSON.stringify(this.shapeList));\n            localStorage.setItem(\"seatIcon\", JSON.stringify(this.seatIcon));\n        },\n        //普通函数方法\n        floatTwo(num) { //保留两位小数\n            return Math.floor(num * 10000) / 10000;\n\n            // rounded = (0.5 + num) | 0;\n            // rounded = ~~ (0.5 + num);\n            // rounded = (0.5 + num) << 0;\n        }\n\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\ndiv {\n    box-sizing: border-box;\n}\n\n.warp {\n    width: 100%;\n    height: 100%;\n    position: relative;\n\n    .mini-map {\n        // width: 282px;\n        // height: 212px;\n        // background-image: url(\"../assets/baobao.svg\");\n        pointer-events: none;\n        background-image: url(\"../assets/test2.svg\");\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center;\n        position: absolute;\n        right: 10px;\n        top: 0;\n        background-color: #fff;\n        z-index: 10;\n        // border: 1px solid springgreen;\n        overflow: hidden;\n        background-color: rgba(66, 55, 55, 0.3);\n\n        .checkBox {\n            border: 1px solid red;\n            position: absolute;\n            top: -1px;\n            left: -1px;\n        }\n    }\n\n    .top {\n        height: 40px;\n        border-bottom: 1px solid red;\n        overflow: hidden;\n        width: 100%;\n    }\n    .bottom {\n        width: 100%;\n        height: calc(100% - 40px);\n        overflow: hidden;\n    }\n    .content {\n        height: 400px;\n        width: 100%;\n        overflow: hidden;\n        position: relative;\n        top: 50%;\n        transform: translateY(-50%);\n        margin: 0 auto;\n        box-sizing: border-box;\n        .svg-warp {\n            position: absolute;\n            top: 0;\n            left: 0;\n            background-color: #bbbcbe;\n\n            &.showCanvas {\n                opacity: 0.7;\n                background-color: transparent;\n            }\n        }\n\n        .my-canvas {\n            border: 1px solid rgba(255, 192, 203, 1);\n            // background-color: rgba(255, 192, 203, 0.3);\n            // background-color: #bbbcbe;\n            //禁止鼠标事件\n            pointer-events: none;\n            position: absolute;\n            top: 0;\n            left: 0;\n\n            // opacity: 1;\n        }\n    }\n    .content-warp {\n        height: 100%;\n        width: 700px;\n        float: left;\n    }\n    .active-area {\n        width: calc(100% - 700px);\n\n        border-left: 1px solid #ccc;\n\n        float: left;\n        // position: fixed;\n        // top: 0;\n        // right: 0;\n        // width: 600px;\n        height: 100%;\n        z-index: 2;\n        // background-color: #ccc;\n        // display: none;\n\n        .active-top {\n            border-bottom: 1px solid #ccc;\n            position: relative;\n            overflow: hidden;\n            .cols-span {\n                position: absolute;\n                bottom: 0;\n                height: 35px;\n                vertical-align: bottom;\n                overflow: hidden;\n                cursor: pointer;\n                span {\n                    display: block;\n                    width: 20px;\n                    margin-right: 5px;\n                    height: 100%;\n                    overflow: hidden;\n                    text-align: center;\n                    float: left;\n                    &:hover {\n                        background-color: pink;\n                    }\n                }\n            }\n        }\n        .active-left {\n            height: calc(100% - 100px);\n            float: left;\n            border-right: 1px solid #ccc;\n            position: relative;\n            overflow: hidden;\n\n            .rows-span {\n                overflow: hidden;\n                cursor: pointer;\n                position: absolute;\n                left: 0;\n                width: 100%;\n                span {\n                    display: inline-block;\n                    width: 100%;\n                    text-align: right;\n                    height: 20px;\n                    margin-bottom: 5px;\n                    &:hover {\n                        background-color: pink;\n                    }\n                }\n            }\n        }\n        .seat-canvas-warp {\n            overflow: auto;\n            min-height: calc(100% - 100px);\n            min-width: calc(100% - 100px);\n            position: relative;\n            .seat-canvas {\n                z-index: 2;\n                background:: rgba(204, 204, 204, 0.5);\n            }\n            .selected-box {\n                position: absolute;\n                top: 0;\n                left: 0;\n                border: 2px dashed red;\n                z-index: 2;\n            }\n            .hover-box {\n                position: absolute;\n                top: 0;\n                left: 0;\n                background-color: pink;\n            }\n            .only-for-action {\n                position: absolute;\n                top: 0;\n                left: 0;\n                z-index: 3;\n            }\n        }\n\n        canvas {\n            float: left;\n            // margin: 0 auto;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n\n    }\n\n    .pop {\n        z-index: 10;\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(66, 55, 55, 0.3);\n\n        .pop-content {\n            text-align: left;\n            position: absolute;\n            width: 500px;\n            height: 300px;\n            //- padding-top: 60px;\n            top: 50%;\n            left: 50%;\n            margin-left: -250px;\n            margin-top: -150px;\n            background-color: #fff;\n\n            h4 {\n                padding: 10px;\n            }\n\n            em.radio {\n                color: #bbbcbe;\n                margin-right: 10px;\n                font-style: normal;\n\n                &.checked {\n                    color: red;\n                }\n            }\n        }\n    }\n}\n.hover-info {\n    padding: 12px;\n    background-color: rgba(0,0,0,.6);\n    position: absolute;\n    -webkit-border-radius: 3px;\n    -moz-border-radius: 3px;\n    border-radius: 3px;\n    pointer-events: none;\n    transform: translate(-50%,-140%);\n    span {\n        font-size: 12px;\n        color: #fff;\n    }\n    div {\n        width: 0;\n        height: 0;\n        border-color: rgba(0,0,0,.6) transparent transparent;\n        border-style: solid;\n        border-width: 10px 10px 0;\n        position: absolute;\n        bottom: -10px;\n        left: 0;\n        right: 0;\n        margin: auto;\n    }\n}\nbutton {\n    padding: 5px;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./svg_to_canvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./svg_to_canvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./svg_to_canvas.vue?vue&type=template&id=34ea8d8b&scoped=true&lang=pug&\"\nimport script from \"./svg_to_canvas.vue?vue&type=script&lang=js&\"\nexport * from \"./svg_to_canvas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./svg_to_canvas.vue?vue&type=style&index=0&id=34ea8d8b&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"34ea8d8b\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./svg_to_canvas.vue?vue&type=style&index=0&id=34ea8d8b&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./svg_to_canvas.vue?vue&type=style&index=0&id=34ea8d8b&lang=scss&scoped=true&\""],"sourceRoot":""}